//vedio & code in my channel YouTube.com/@Geemap     mstafa.farahani@gmail.com

var geometry = /* color: #00ffff */ee.Geometry.Point([25.692706954748548, 59.11775760564354]);
/*YOu CAN USE city ,
var city = ee.FeatureCollection("WM/geoLab/geoBoundaries/600/ADM2").filterBounds(geometry) //boundary city
Map.addLayer(city)
Map.centerObject(geometry,8)


var provinceORstate = ee.FeatureCollection("FAO/GAUL_SIMPLIFIED_500m/2015/level1").filterBounds(geometry) //boundary province/state
Map.addLayer(province)
*/

// Define the country boundary using FAO/GAUL dataset and filter by geometry
var country = ee.FeatureCollection("FAO/GAUL/2015/level0").filterBounds(geometry);
Map.addLayer(country); // Add the country boundary to the map
Map.centerObject(geometry,4)



var roi = country.map(function(feature){
  return feature.simplify(1000)
  })

Map.centerObject(roi)
Map.addLayer(roi)


var modis = ee.ImageCollection("MODIS/061/MOD10A1")
.select('NDSI_Snow_Cover')
.filterDate('2023', '2024');




var days = 7
var mill = ee.Number(days).multiply(1000 * 24 * 3600)
var filter = ee.Filter.maxDifference({
  difference: mill, leftField: 'system:time_start', rightField: 'system:time_start'
  });
var join = ee.Join.saveAll('images')
var join_collection = ee.ImageCollection(join.apply(modis, modis, filter))

var smooth_collection = join_collection.map(function(img){
  var images = ee.ImageCollection.fromImages(img.get('images')).reduce(ee.Reducer.percentile([75])).rename('smoothed')
  return img.rename('original').addBands(images)
  })
  

// Create a time series chart showing snowareaarea growth
print(ui.Chart.image.series({
  imageCollection: smooth_collection,
  region: roi,
  reducer: ee.Reducer.mean(),
  scale: 500,
  xProperty: 'system:time_start'
}).setSeriesNames(['snow Duration']).setOptions({
  title: 'snow Duration  Growth',
  hAxis: {title: 'Year'},
  vAxis: {title: 'snow Duration  (s)'},
  interpolateNulls: true,
  lineWidth: 1,
  pointSize: 2,
  curveType: 'function'
}));


Map.addLayer(smooth_collection.toBands().clip(roi),[],'modis_ndsi_smoothed',false)


var snow_duration = smooth_collection.select('smoothed').map(function(img){
  var thr = img.gt(40)
  return thr
  }).sum();
  
Map.addLayer(snow_duration.clip(roi), [],'snow_duration',false)























//---------------------------------------------------------
// Create a panel to display the legend
var legend = ui.Panel({
  style: {
    position: 'bottom-right',  // Position the panel in the bottom-right corner
    padding: '8px 13px'  // Add padding for better appearance
  }
});

// Add a title to the legend
var legendTitle = ui.Label({
  value: 'snow Duration (s)',  // Title text
  style: {
    fontWeight: 'bold',  // Make the font bold
    fontSize: '18px',  // Set the font size
    margin: '0 0 4px 0',  // Margin for spacing
    padding: '0'  // No padding for the label
  }
});

// Add the title to the legend panel
legend.add(legendTitle);

// Function to create a vertical color bar
var makeColorBar = function(palette) {
  var colorBar = ui.Thumbnail({
    image: ee.Image.pixelLonLat().select(1),  // Use latitude as the image for the gradient
    params: {
      bbox: [0, 0, 0.1, 1],  // Create a vertical color bar
      dimensions: '10x100',  // Set the size of the color bar (10 pixels wide and 100 pixels high)
      format: 'png',  // Image format
      min: 0,  // Minimum value for the color bar
      max: 1,  // Maximum value for the color bar
      palette: palette,  // Use the provided palette for colors
    },
    style: {stretch: 'vertical', margin: '8px 0'}  // Stretch the color bar vertically and add margin
  });
  return colorBar;  // Return the created color bar
};

// Define the magma color palette
var palette = ['#ff6a00'] // Colors for the magma palette

// Create labels for the min and max values
var minLabel = ui.Label({
  value: '75',  // Label for the maximum value
  style: {margin: '4px 8px'}  // Add margin for better appearance
});
var maxLabel = ui.Label({
  value: '0',  // Label for the minimum value
  style: {margin: '4px 8px'}  // Add margin for better appearance
});

// Add the min label, color bar, and max label to the legend panel in a vertical layout
legend.add(minLabel);  // Add the min label at the top
legend.add(makeColorBar(palette));  // Add the color bar in the middle
legend.add(maxLabel);  // Add the max label at the bottom

// Add the legend panel to the map
Map.add(legend);







