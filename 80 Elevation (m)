//vedio & code in my channel YouTube.com/@Geemap     mstafa.farahani@gmail.com  Happy coding! ðŸš€


var geometry = 
    /* color: #bf04c2 */
    /* shown: false */
    ee.Geometry.Point([-105.1558095597715, 25.741975538874]);

/*YOu CAN USE city boundary and run this code only for your  city ,
var city = ee.FeatureCollection("WM/geoLab/geoBoundaries/600/ADM2").filterBounds(geometry)
Map.addLayer(city)
Map.centerObject(geometry,8)




YOu CAN USE province boundary and run this code only for your  province
var provinceORstate = ee.FeatureCollection("FAO/GAUL_SIMPLIFIED_500m/2015/level1").filterBounds(geometry) //boundary province/state
Map.addLayer(province)
*/




//YOu CAN USE country boundary and run this code only for your  country
var country = ee.FeatureCollection("FAO/GAUL/2015/level0").filterBounds(geometry);
Map.addLayer(country); // Add the country boundary to the map
Map.centerObject(geometry,3)






var Elevation = ee.Image('WWF/HydroSHEDS/30CONDEM').select('b1').clip(country)
Map.addLayer(Elevation,{min:48.08,max:2643.92,palette:['ffffff','a2f3ff','00ffff','00ff00','d3ff1e','fff72a','ffbb00','ff792c','ff0000']},'Elevation ')



// Create a chart of forecasted
var chart = ui.Chart.image.seriesByRegion({
  imageCollection: Elevation,
  regions: country,
  reducer: ee.Reducer.mean(),
  scale: 927.67  ,
  seriesProperty: 'name'
}).setOptions({
      curveType:'function',
      lineWidth: 1,
      pointSize: 2,
      title: 'Elevation',
      vAxis: {title: 'meter'},
      hAxis: {title: '', format: 'YYYY-MM-dd'},
      series: {
        0: {color: '#fc8d62'},
        1: {color: '#8da0cb'}
      },
      legend: {
        position: 'top'
      }
    });
print(chart)



function soil(id, band, name){
  var image = ee.Image(id).select(band)
  Map.addLayer(image.clip(country),[],name,false)
  print(ui.Chart.image.histogram(image, country, 927.67))
  var stat = image.reduceRegion({reducer: ee.Reducer.mean().combine({reducer2: ee.Reducer.minMax(), sharedInputs: true}),
  geometry: country, scale: 927.67});
  print('statistical information for '+name,stat)
  
  
  
  
  
  Export.image.toDrive({
  image: image.clip(country),
  description: name,
  scale: 927.67,
  region: country,
  crs: image.getInfo().crs,
  folder: 'test'
  })
  return image
  }

var Aluminium  = soil("WWF/HydroSHEDS/30CONDEM", 'b1', 'Elevation' )


// Create a panel to display the legend
var legend = ui.Panel({
  style: {
    position: 'bottom-right',  // Position the panel in the bottom-right corner
    padding: '8px 13px'  // Add padding for better appearance
  }
});

// Add a title to the legend
var legendTitle = ui.Label({
  value: 'Elevation ',  // Title text
  style: {
    fontWeight: 'bold',  // Make the font bold
    fontSize: '18px',  // Set the font size
    margin: '0 0 4px 0',  // Margin for spacing
    padding: '0'  // No padding for the label
  }
});

// Add the title to the legend panel
legend.add(legendTitle);

// Function to create a vertical color bar
var makeColorBar = function(palette) {
  var colorBar = ui.Thumbnail({
    image: ee.Image.pixelLonLat().select(1),  // Use latitude as the image for the gradient
    params: {
      bbox: [0, 0, 0.1, 1],  // Create a vertical color bar
      dimensions: '10x100',  // Set the size of the color bar (10 pixels wide and 100 pixels high)
      format: 'png',  // Image format
      min: 0,  // Minimum value for the color bar
      max: 1,  // Maximum value for the color bar
      palette: palette,  // Use the provided palette for colors
    },
    style: {stretch: 'vertical', margin: '8px 0'}  // Stretch the color bar vertically and add margin
  });
  return colorBar;  // Return the created color bar
};

// Define the magma color palette
var palette = ['ffffff','a2f3ff','00ffff','00ff00','d3ff1e','fff72a','ffbb00','ff792c','ff0000'] // Colors for the magma palette

// Create labels for the min and max values
var minLabel = ui.Label({
  value: '172',  // Label for the maximum value
  style: {margin: '4px 8px'}  // Add margin for better appearance
});
var maxLabel = ui.Label({
  value: '162',  // Label for the minimum value
  style: {margin: '4px 8px'}  // Add margin for better appearance
});

// Add the min label, color bar, and max label to the legend panel in a vertical layout
legend.add(minLabel);  // Add the min label at the top
legend.add(makeColorBar(palette));  // Add the color bar in the middle
legend.add(maxLabel);  // Add the max label at the bottom

// Add the legend panel to the map
Map.add(legend);




